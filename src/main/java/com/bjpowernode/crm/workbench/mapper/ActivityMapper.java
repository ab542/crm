package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.model.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Apr 12 11:01:38 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Apr 12 11:01:38 CST 2023
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Apr 12 11:01:38 CST 2023
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Apr 12 11:01:38 CST 2023
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Apr 12 11:01:38 CST 2023
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Apr 12 11:01:38 CST 2023
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 创建市场活动
     * @param activity
     * @return
     */
    int insertActivity(Activity activity);

    /**
     * 根据查询条件且按照页数查询市场活动的列表（分页查询）
     * @param map
     * @return
     */
    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);

    /**
     * 根据查询条件 查询市场活动总条数
     * @param map
     * @return
     */
    int selectCountByCondition(Map<String,Object> map);

    /**
     * 批量删除市场活动（根据ids）
     * @param ids
     * @return
     */
    int deleteActivityByIds(String[] ids);

    /**
     * 根据id 查市场活动信息
     * @param id
     * @return
     */
    Activity selectActivityById(String id);

    /**
     * 根据id修改信息
     * @param activity
     * @return
     */
    int updateActivityById(Activity activity);

    /**
     * 查询所有市场活动
     */
    List<Activity> selectAllActivities();

    /**
     * 批量插入所有活动
     * @param activityList
     * @return
     */
    int insertActivitiesByList(List<Activity> activityList);

    /**
     * 根据id查看详细市场活动信息
     * @param id
     * @return
     */
    Activity selectActivityForDetailById(String id);


}